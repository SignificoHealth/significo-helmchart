apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ Values.applicationName }}
  labels:
    app: {{ Values.applicationName }}
spec:
  replicas: {{ int .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }} # Default to 10 if not specified
  selector:
    matchLabels:
      app: {{ Values.applicationName }}
      release: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ Values.applicationName }}
        chart: {{ template "shadowflight-backend.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        version: {{ .Values.image.tag }}
        tags.datadoghq.com/env: {{ .Values.datadog.env }}
        tags.datadoghq.com/service: {{ Values.applicationName }}
        tags.datadoghq.com/version: {{ .Values.image.tag }}
        admission.datadoghq.com/enabled: "true"
      annotations:
        admission.datadoghq.com/java-lib.version: v1.19.0
        traffic.sidecar.istio.io/excludeOutboundPorts: "8200"
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: "{{ .Values.vault.role }}"
        vault.hashicorp.com/agent-inject-secret-secrets: "{{ .Values.vault.path }}"
        vault.hashicorp.com/agent-inject-template-secrets: |
           {{`{{- with secret "`}}{{ .Values.vault.path }}" -}}
            {{` set -e
             {{- range $key, $value := .Data.data }}
               export {{ $key }}={{ $value }}
             {{- end }}
           {{- end }}`}}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      imagePullSecrets:
        - name: {{ .Values.image.imageSecretName}} 
      containers:
        - name: {{ Values.applicationName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.containerPort }}
              name: http
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          env:
          - name: DD_LOGS_INJECTION
            value: "true"
          - name: BASH_ENV
            value: /vault/secrets/secrets
          - name: DEBUG
            value: "true"
      nodeSelector:
          node.group: {{ .Values.nodegroup }}
      restartPolicy: Always
